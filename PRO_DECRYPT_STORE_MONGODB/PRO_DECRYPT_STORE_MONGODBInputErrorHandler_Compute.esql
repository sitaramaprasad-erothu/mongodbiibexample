

CREATE COMPUTE MODULE PRO_DECRYPT_STORE_MONGODBInputErrorHandler_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE errNumber INTEGER;
		DECLARE errMessage CHARACTER '';
		
		SET OutputLocalEnvironment = InputLocalEnvironment;
		CALL CopyMessageHeaders();
		CALL getErrDetails(InputExceptionList, errNumber, errMessage);
		
		SET OutputRoot.JSON.Data.Error.Number = errNumber;
		SET OutputRoot.JSON.Data.Error.Message = errMessage;
		
		SET OutputLocalEnvironment.Destination.HTTP.ReplyStatusCode = 500;
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
	
	CREATE PROCEDURE getErrDetails(IN InputTree REFERENCE, OUT errNumber integer, OUT errMessage char)	
	BEGIN
   	    DECLARE refException REFERENCE TO InputTree.*[1];
		WHILE LASTMOVE(refException) DO
			-- store the current values for the error number and text
			IF refException.Number IS NOT NULL THEN
        		SET errNumber = refException.Number;
        		SET errMessage = refException.Text;
        		FOR refInsert AS refException.Insert[] DO
        			SET errMessage = errMessage || '::' || refInsert.Text;
        			MOVE refInsert NEXTSIBLING; 
        		END FOR;
  			END IF;
			MOVE refException LASTCHILD;
		END WHILE; 
	END;
	
END MODULE;
